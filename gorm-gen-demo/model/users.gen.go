// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameUser = "users"

// User mapped from table <users>
type User struct {
	ID              int64             `gorm:"column:id;type:bigint(20) unsigned;primaryKey;autoIncrement:true" json:"id,string"`
	Username        string            `gorm:"column:username;type:varchar(64);not null;comment:login name, cannot rename" json:"username"`
	Nickname        string            `gorm:"column:nickname;type:varchar(64);not null;comment:display name, chinese name" json:"nickname"`
	Password        string            `gorm:"column:password;type:varchar(128);not null" json:"password"`
	Phone           string            `gorm:"column:phone;type:varchar(16);not null" json:"phone"`
	Email           string            `gorm:"column:email;type:varchar(64);not null" json:"email"`
	Portrait        string            `gorm:"column:portrait;type:varchar(255);not null;comment:portrait image url" json:"portrait"`
	Roles           string            `gorm:"column:roles;type:varchar(255);not null;comment:Admin | Standard | Guest, split by space" json:"roles"`
	Contacts        string            `gorm:"column:contacts;type:varchar(1024);comment:json e.g. {wecom:xx, dingtalk_robot_token:yy}" json:"contacts"`
	Maintainer      int64             `gorm:"column:maintainer;type:tinyint(1);not null" json:"maintainer"`
	CreateAt        int64             `gorm:"column:create_at;type:bigint(20);not null" json:"create_at"`
	CreateBy        string            `gorm:"column:create_by;type:varchar(64);not null" json:"create_by"`
	UpdateAt        int64             `gorm:"column:update_at;type:bigint(20);not null" json:"update_at"`
	UpdateBy        string            `gorm:"column:update_by;type:varchar(64);not null" json:"update_by"`
	UserGroupMember []UserGroupMember `gorm:"user_id:id" json:"user_group_member"`
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}
