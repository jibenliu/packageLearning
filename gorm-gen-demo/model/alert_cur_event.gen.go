// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameAlertCurEvent = "alert_cur_event"

// AlertCurEvent mapped from table <alert_cur_event>
type AlertCurEvent struct {
	ID               int64  `gorm:"column:id;type:bigint(20) unsigned;primaryKey;comment:use alert_his_event.id" json:"id,string"`
	Cate             string `gorm:"column:cate;type:varchar(128);not null" json:"cate"`
	DatasourceID     int64  `gorm:"column:datasource_id;type:bigint(20);not null;comment:datasource id" json:"datasource_id"`
	Cluster          string `gorm:"column:cluster;type:varchar(128);not null" json:"cluster"`
	GroupID          int64  `gorm:"column:group_id;type:bigint(20) unsigned;not null;comment:busi group id of rule" json:"group_id"`
	GroupName        string `gorm:"column:group_name;type:varchar(255);not null;comment:busi group name" json:"group_name"`
	Hash             string `gorm:"column:hash;type:varchar(64);not null;comment:rule_id + vector_pk" json:"hash"`
	RuleID           int64  `gorm:"column:rule_id;type:bigint(20) unsigned;not null" json:"rule_id"`
	RuleName         string `gorm:"column:rule_name;type:varchar(255);not null" json:"rule_name"`
	RuleNote         string `gorm:"column:rule_note;type:varchar(2048);not null;default:alert rule note" json:"rule_note"`
	RuleProd         string `gorm:"column:rule_prod;type:varchar(255);not null" json:"rule_prod"`
	RuleAlgo         string `gorm:"column:rule_algo;type:varchar(255);not null" json:"rule_algo"`
	Severity         int64  `gorm:"column:severity;type:tinyint(1);not null;comment:0:Emergency 1:Warning 2:Notice" json:"severity"`
	PromForDuration  int64  `gorm:"column:prom_for_duration;type:int(11);not null;comment:prometheus for, unit:s" json:"prom_for_duration"`
	PromQl           string `gorm:"column:prom_ql;type:varchar(8192);not null;comment:promql" json:"prom_ql"`
	PromEvalInterval int64  `gorm:"column:prom_eval_interval;type:int(11);not null;comment:evaluate interval" json:"prom_eval_interval"`
	Callbacks        string `gorm:"column:callbacks;type:varchar(255);not null;comment:split by space: http://a.com/api/x http://a.com/api/y" json:"callbacks"`
	RunbookURL       string `gorm:"column:runbook_url;type:varchar(255)" json:"runbook_url"`
	NotifyRecovered  int64  `gorm:"column:notify_recovered;type:tinyint(1);not null;comment:whether notify when recovery" json:"notify_recovered"`
	NotifyChannels   string `gorm:"column:notify_channels;type:varchar(255);not null;comment:split by space: sms voice email dingtalk wecom" json:"notify_channels"`
	NotifyGroups     string `gorm:"column:notify_groups;type:varchar(255);not null;comment:split by space: 233 43" json:"notify_groups"`
	NotifyRepeatNext int64  `gorm:"column:notify_repeat_next;type:bigint(20);not null;comment:next timestamp to notify, get repeat settings from rule" json:"notify_repeat_next"`
	NotifyCurNumber  int64  `gorm:"column:notify_cur_number;type:int(11);not null" json:"notify_cur_number"`
	TargetIdent      string `gorm:"column:target_ident;type:varchar(191);not null;comment:target ident, also in tags" json:"target_ident"`
	TargetNote       string `gorm:"column:target_note;type:varchar(191);not null;comment:target note" json:"target_note"`
	FirstTriggerTime int64  `gorm:"column:first_trigger_time;type:bigint(20)" json:"first_trigger_time"`
	TriggerTime      int64  `gorm:"column:trigger_time;type:bigint(20);not null" json:"trigger_time"`
	TriggerValue     string `gorm:"column:trigger_value;type:varchar(255);not null" json:"trigger_value"`
	Annotations      string `gorm:"column:annotations;type:text;not null;comment:annotations" json:"annotations"`
	RuleConfig       string `gorm:"column:rule_config;type:text;not null;comment:annotations" json:"rule_config"`
	Tags             string `gorm:"column:tags;type:varchar(1024);not null;comment:merge data_tags rule_tags, split by ,," json:"tags"`
}

// TableName AlertCurEvent's table name
func (*AlertCurEvent) TableName() string {
	return TableNameAlertCurEvent
}
