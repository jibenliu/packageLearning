// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

const TableNameRecordingRule = "recording_rule"

// RecordingRule mapped from table <recording_rule>
type RecordingRule struct {
	ID               int64  `gorm:"column:id;type:bigint(20) unsigned;primaryKey;autoIncrement:true" json:"id,string"`
	GroupID          int64  `gorm:"column:group_id;type:bigint(20);not null;comment:group_id" json:"group_id"`
	DatasourceIds    string `gorm:"column:datasource_ids;type:varchar(255);not null;comment:datasource ids" json:"datasource_ids"`
	Cluster          string `gorm:"column:cluster;type:varchar(128);not null" json:"cluster"`
	Name             string `gorm:"column:name;type:varchar(255);not null;comment:new metric name" json:"name"`
	Note             string `gorm:"column:note;type:varchar(255);not null;comment:rule note" json:"note"`
	Disabled         int64  `gorm:"column:disabled;type:tinyint(1);not null;comment:0:enabled 1:disabled" json:"disabled"`
	PromQl           string `gorm:"column:prom_ql;type:varchar(8192);not null;comment:promql" json:"prom_ql"`
	PromEvalInterval int64  `gorm:"column:prom_eval_interval;type:int(11);not null;comment:evaluate interval" json:"prom_eval_interval"`
	AppendTags       string `gorm:"column:append_tags;type:varchar(255);comment:split by space: service=n9e mod=api" json:"append_tags"`
	CreateAt         int64  `gorm:"column:create_at;type:bigint(20)" json:"create_at"`
	CreateBy         string `gorm:"column:create_by;type:varchar(64)" json:"create_by"`
	UpdateAt         int64  `gorm:"column:update_at;type:bigint(20)" json:"update_at"`
	UpdateBy         string `gorm:"column:update_by;type:varchar(64)" json:"update_by"`
}

// TableName RecordingRule's table name
func (*RecordingRule) TableName() string {
	return TableNameRecordingRule
}
