syntax = "proto3";

package books.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "booktest/api/books/v1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "booktest";
        version: "1.0";
        description: "Boilerplate code generated by **sqlc-grpc**. Modify _proto/*.proto_ files then run `buf generate` to change the services interface.";
        contact: {
            name: "sqlc-grpc";
            url: "https://github.com/walterwanderley/sqlc-grpc";
        };
    };
};
service BooksService {
    
    rpc BooksByTags(BooksByTagsRequest) returns (BooksByTagsResponse) {
        option (google.api.http) = {
            post: "/books-by-tags"
            body: "dollar_1"
            response_body: "list"
        };
        
    }
    rpc BooksByTitleYear(BooksByTitleYearRequest) returns (BooksByTitleYearResponse) {
        option (google.api.http) = {
            get: "/books-by-title-year"
            response_body: "list"
        };
        
    }
    rpc CreateAuthor(CreateAuthorRequest) returns (CreateAuthorResponse) {
        option (google.api.http) = {
            post: "/author"
            body: "*"
            response_body: "author"
        };
        
    }
    rpc CreateBook(CreateBookRequest) returns (CreateBookResponse) {
        option (google.api.http) = {
            post: "/book"
            body: "*"
            response_body: "book"
        };
        
    }
    rpc DeleteBook(DeleteBookRequest) returns (DeleteBookResponse) {
        option (google.api.http) = {
            delete: "/book/{book_id}"
        };
        
    }
    rpc GetAuthor(GetAuthorRequest) returns (GetAuthorResponse) {
        option (google.api.http) = {
            get: "/author/{author_id}"
            response_body: "author"
        };
        
    }
    rpc GetBook(GetBookRequest) returns (GetBookResponse) {
        option (google.api.http) = {
            get: "/book/{book_id}"
            response_body: "book"
        };
        
    }
    rpc UpdateBook(UpdateBookRequest) returns (UpdateBookResponse) {
        option (google.api.http) = {
            put: "/book"
            body: "*"
        };
        
    }
    rpc UpdateBookISBN(UpdateBookISBNRequest) returns (UpdateBookISBNResponse) {
        option (google.api.http) = {
            put: "/book-isbn"
            body: "*"
        };
        
    }
}


message Author {
    int32 author_id = 1;
    string name = 2;
}

message Book {
    int32 book_id = 1;
    int32 author_id = 2;
    string isbn = 3;
    string book_type = 4;
    string title = 5;
    int32 year = 6;
    google.protobuf.Timestamp available = 7;
    repeated string tags = 8;
}

message BookType {
}

message BooksByTagsRequest {
    repeated string dollar_1 = 1;
}

message BooksByTagsResponse {
    repeated BooksByTagsRow list = 1;
}

message BooksByTagsRow {
    int32 book_id = 1;
    string title = 2;
    google.protobuf.StringValue name = 3;
    string isbn = 4;
    repeated string tags = 5;
}

message BooksByTitleYearRequest {
    string title = 1;
    int32 year = 2;
}

message BooksByTitleYearResponse {
    repeated Book list = 1;
}

message CreateAuthorRequest {
    string name = 1;
}

message CreateAuthorResponse {
    Author author = 1;
}

message CreateBookRequest {
    int32 author_id = 1;
    string isbn = 2;
    string book_type = 3;
    string title = 4;
    int32 year = 5;
    google.protobuf.Timestamp available = 6;
    repeated string tags = 7;
}

message CreateBookResponse {
    Book book = 1;
}

message DeleteBookRequest {
    int32 book_id = 1;
}

message DeleteBookResponse {
}

message GetAuthorRequest {
    int32 author_id = 1;
}

message GetAuthorResponse {
    Author author = 1;
}

message GetBookRequest {
    int32 book_id = 1;
}

message GetBookResponse {
    Book book = 1;
}

message NullBookType {
    string book_type = 1;
    bool valid = 2;
}

message UpdateBookISBNRequest {
    string title = 1;
    repeated string tags = 2;
    int32 book_id = 3;
    string isbn = 4;
}

message UpdateBookISBNResponse {
}

message UpdateBookRequest {
    string title = 1;
    repeated string tags = 2;
    string book_type = 3;
    int32 book_id = 4;
}

message UpdateBookResponse {
}

